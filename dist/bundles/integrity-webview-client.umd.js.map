{"version":3,"file":"integrity-webview-client.umd.js","sources":["../../src/services/receive-message.service.ts","../../src/services/webview-client.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nexport class ReceiveMessageService {\nprivate InitKey: string = 'com.brickchain.integrity.init';\nprivate PollKey: string = 'com.brickchain.integrity.poll';\nprivate HandleKey: string = 'com.brickchain.integrity.handle';\nprivate HandleResultKey: string = 'com.brickchain.integrity.handle.result';\nprivate HandleErrorKey: string = 'com.brickchain.integrity.handle.error';\n/**\n * @param {?} event\n * @return {?}\n */\npublic receiveMessage(event: any): void {\n    if (/*isDefined(event.data.op)*/event.data.op) {\n      let /** @type {?} */ script = event.data;\n      switch (script.op) {\n        case 'init':\n          script.result = ( /** @type {?} */((<any>window)))[this.InitKey] ? ( /** @type {?} */((<any>window)))[this.InitKey](script.param) : null;\n          break;\n        case 'poll':\n          script.result = ( /** @type {?} */((<any>window)))[this.PollKey] ? ( /** @type {?} */((<any>window)))[this.PollKey]() : null;\n          break;\n        case 'handle':\n          script.result = ( /** @type {?} */((<any>window)))[this.HandleKey] ? ( /** @type {?} */((<any>window)))[this.HandleKey]() : null;\n          break;\n        case 'result':\n          if (/*isDefined(event.data.param)*/event.data.param) {\n            script.result = ( /** @type {?} */((<any>window)))[this.HandleResultKey] ? ( /** @type {?} */((<any>window)))[this.HandleResultKey](script.param) : null;\n          } else {\n            script.result = ( /** @type {?} */((<any>window)))[this.HandleResultKey] ? ( /** @type {?} */((<any>window)))[this.HandleResultKey]() : null;\n          }\n          break;\n        case 'error':\n          script.result = ( /** @type {?} */((<any>window)))[this.HandleErrorKey] ? ( /** @type {?} */((<any>window)))[this.HandleErrorKey](script.param) : null;\n          break;\n        case 'title':\n          script.result = document.title;\n          break;\n        default:\n          script.error = 'unsupported operation'\n      }\n      event.source.postMessage(script, event.origin);\n    }\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ReceiveMessageService_tsickle_Closure_declarations() {\n/** @type {?} */\nReceiveMessageService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nReceiveMessageService.ctorParameters;\n/** @type {?} */\nReceiveMessageService.prototype.InitKey;\n/** @type {?} */\nReceiveMessageService.prototype.PollKey;\n/** @type {?} */\nReceiveMessageService.prototype.HandleKey;\n/** @type {?} */\nReceiveMessageService.prototype.HandleResultKey;\n/** @type {?} */\nReceiveMessageService.prototype.HandleErrorKey;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nexport class WebviewClientService {\nprivate InitKey: string = 'com.brickchain.integrity.init';\nprivate PollKey: string = 'com.brickchain.integrity.poll';\nprivate HandleKey: string = 'com.brickchain.integrity.handle';\nprivate HandleResultKey: string = 'com.brickchain.integrity.handle.result';\nprivate HandleErrorKey: string = 'com.brickchain.integrity.handle.error';\nprivate CancelKey: string = 'com.brickchain.integrity.cancel';\nprivate result: any;\nprivate handleDirective: any;\n/**\n * @param {?} action\n */\npublic constructor(action: (params: string) => void) {\n        \n        (<any>window)[this.InitKey] = (params: string) => {\n            action(params);\n        };\n\n        (<any>window)[this.PollKey] = () => this.result;\n        (<any>window)[this.HandleKey] = () => this.handleDirective;\n        \n    }\n/**\n * @param {?} result\n * @return {?}\n */\npublic close(result:any): void {\n        this.result = result;\n    }\n/**\n * @return {?}\n */\npublic cancel(): void {\n        this.result = this.CancelKey;\n    }\n/**\n * @param {?} directive\n * @return {?}\n */\npublic handle(directive:any) :Promise<any> {\n        this.handleDirective=directive;\n        return new Promise((resolve,reject) => {\n            ( /** @type {?} */((<any>window)))[this.HandleResultKey] = (json:any) => resolve(json ? JSON.parse(json) : json);\n            ( /** @type {?} */((<any>window)))[this.HandleErrorKey] = (json:any) => reject(json ? JSON.parse(json):json);\n        });\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\nnull,\n];\n}\n\nfunction WebviewClientService_tsickle_Closure_declarations() {\n/** @type {?} */\nWebviewClientService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWebviewClientService.ctorParameters;\n/** @type {?} */\nWebviewClientService.prototype.InitKey;\n/** @type {?} */\nWebviewClientService.prototype.PollKey;\n/** @type {?} */\nWebviewClientService.prototype.HandleKey;\n/** @type {?} */\nWebviewClientService.prototype.HandleResultKey;\n/** @type {?} */\nWebviewClientService.prototype.HandleErrorKey;\n/** @type {?} */\nWebviewClientService.prototype.CancelKey;\n/** @type {?} */\nWebviewClientService.prototype.result;\n/** @type {?} */\nWebviewClientService.prototype.handleDirective;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["Injectable"],"mappings":"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"}