{"version":3,"file":"integrity-webview-client.umd.min.js","sources":["../../src/services/webview-client.service.ts","../../src/services/receive-message.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nexport class WebviewClientService {\nprivate InitKey: string = 'com.brickchain.integrity.init';\nprivate PollKey: string = 'com.brickchain.integrity.poll';\nprivate CancelKey: string = 'com.brickchain.integrity.cancel';\n/**\n * @param {?} action\n * @return {?}\n */\npublic init(action: (params: string) => void): void {\n        \n        ( /** @type {?} */((<any>window)))[this.InitKey] = (params: string) => {\n            action(params);\n        };\n\n        this.poll();\n\n    }\n/**\n * @return {?}\n */\npublic poll(): void {\n        \n        ( /** @type {?} */((<any>window)))[this.PollKey] = () => {\n            console.log('hello');\n        };\n    }\n/**\n * @return {?}\n */\npublic cancel(): string {\n        return this.CancelKey;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction WebviewClientService_tsickle_Closure_declarations() {\n/** @type {?} */\nWebviewClientService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWebviewClientService.ctorParameters;\n/** @type {?} */\nWebviewClientService.prototype.InitKey;\n/** @type {?} */\nWebviewClientService.prototype.PollKey;\n/** @type {?} */\nWebviewClientService.prototype.CancelKey;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nexport class ReceiveMessageService {\nprivate InitKey: string = 'com.brickchain.integrity.init';\nprivate PollKey: string = 'com.brickchain.integrity.poll';\nprivate HandleKey: string = 'com.brickchain.integrity.handle';\nprivate HandleResultKey: string = 'com.brickchain.integrity.handle.result';\nprivate HandleErrorKey: string = 'com.brickchain.integrity.handle.error';\n/**\n * @param {?} event\n * @return {?}\n */\npublic receiveMessage(event: any): void {\n    if (/*isDefined(event.data.op)*/event.data.op) {\n      let /** @type {?} */ script = event.data;\n      switch (script.op) {\n        case 'init':\n          script.result = ( /** @type {?} */((<any>window)))[this.InitKey] ? ( /** @type {?} */((<any>window)))[this.InitKey](script.param) : null;\n          break;\n        case 'poll':\n          script.result = ( /** @type {?} */((<any>window)))[this.PollKey] ? ( /** @type {?} */((<any>window)))[this.PollKey]() : null;\n          break;\n        case 'handle':\n          script.result = ( /** @type {?} */((<any>window)))[this.HandleKey] ? ( /** @type {?} */((<any>window)))[this.HandleKey]() : null;\n          break;\n        case 'result':\n          if (/*isDefined(event.data.param)*/event.data.param) {\n            script.result = ( /** @type {?} */((<any>window)))[this.HandleResultKey] ? ( /** @type {?} */((<any>window)))[this.HandleResultKey](script.param) : null;\n          } else {\n            script.result = ( /** @type {?} */((<any>window)))[this.HandleResultKey] ? ( /** @type {?} */((<any>window)))[this.HandleResultKey]() : null;\n          }\n          break;\n        case 'error':\n          script.result = ( /** @type {?} */((<any>window)))[this.HandleErrorKey] ? ( /** @type {?} */((<any>window)))[this.HandleErrorKey](script.param) : null;\n          break;\n        case 'title':\n          script.result = document.title;\n          break;\n        default:\n          script.error = 'unsupported operation'\n      }\n      event.source.postMessage(script, event.origin);\n    }\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ReceiveMessageService_tsickle_Closure_declarations() {\n/** @type {?} */\nReceiveMessageService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nReceiveMessageService.ctorParameters;\n/** @type {?} */\nReceiveMessageService.prototype.InitKey;\n/** @type {?} */\nReceiveMessageService.prototype.PollKey;\n/** @type {?} */\nReceiveMessageService.prototype.HandleKey;\n/** @type {?} */\nReceiveMessageService.prototype.HandleResultKey;\n/** @type {?} */\nReceiveMessageService.prototype.HandleErrorKey;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["WebviewClientService","this","InitKey","PollKey","CancelKey","prototype","init","action","params","poll","console","log","cancel","decorators","type","Injectable","ctorParameters","ReceiveMessageService","HandleKey","HandleResultKey","HandleErrorKey","receiveMessage","event","data","op","script","result","param","document","title","error","source","postMessage","origin"],"mappings":"qXACA,IAAAA,sBAAA,WAAA,QAAAA,wBAIYC,KAAZC,QAA8B,gCAClBD,KAAZE,QAA8B,gCAClBF,KAAZG,UAAgC,wCAE3BJ,sBAALK,UAAAC,KAAK,SAAAC,QAEG,OAAcN,KAAKC,SAAW,SAAAM,QAC1BD,OAAOC,SAGXP,KAAKQ,QAIRT,qBAALK,UAAAI,KAAK,WAIG,OAFcR,KAAKE,SAAW,WAG1BO,QAFQC,IAAI,WAInBX,qBAALK,UAAAO,OAAK,WAKG,MAJOX,MAAKG,kCAGbJ,sBAAPa,aACEC,KAAMC,cAIRA,aADCf,qBAADgB,eAAC,WAAA,SCjCD,IAAAC,uBAAA,WAAA,QAAAA,yBAIUhB,KAAVC,QAA4B,gCAClBD,KAAVE,QAA4B,gCAClBF,KAAViB,UAA8B,kCACpBjB,KAAVkB,gBAAoC,yCAC1BlB,KAAVmB,eAAmC,8CAEhCH,uBAAHZ,UAAAgB,eAAG,SAAAC,OACC,GAAKA,MAAiCC,KAAKC,GAAI,CAC7C,GAAIC,QAASH,MAAMC,IACnB,QAAQE,OAAOD,IACb,IAAK,OACHC,OAAOC,OAAS,OAAczB,KAAKC,SAAW,OAAcD,KAAKC,SAASuB,OAAOE,OAAS,IAC1F,MACF,KAAK,OACHF,OAAOC,OAAS,OAAczB,KAAKE,SAAW,OAAcF,KAAKE,WAAa,IAC9E,MACF,KAAK,SACHsB,OAAOC,OAAS,OAAczB,KAAKiB,WAAa,OAAcjB,KAAKiB,aAAe,IAClF,MACF,KAAK,SACEI,MAAoCC,KAAKI,MAC5CF,OAAOC,OAAS,OAAczB,KAAKkB,iBAAmB,OAAclB,KAAKkB,iBAAiBM,OAAOE,OAAS,KAE1GF,OAAOC,OAAS,OAAczB,KAAKkB,iBAAmB,OAAclB,KAAKkB,mBAAqB,IAEhG,MACF,KAAK,QACHM,OAAOC,OAAS,OAAczB,KAAKmB,gBAAkB,OAAcnB,KAAKmB,gBAAgBK,OAAOE,OAAS,IACxG,MACF,KAAK,QACHF,OAAOC,OAASE,SAASC,KACzB,MACF,SACEJ,OAAOK,MAAQ,wBAEnBR,MAAMS,OAAOC,YAAYP,OAAQH,MAAMW,kCAItChB,uBAAPJ,aACEC,KAAMC,cAARA,aAGCE,sBAADD,eAAC,WAAA"}