{"version":3,"file":"integrity-webview-client.es5.js","sources":["../../index.ts","../../public_api.ts","../../src/integrity-webview-client.ts","../../src/services/receive-message.service.ts","../../src/services/webview-client.service.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {WebviewClientService,ReceiveMessageService} from './public_api';\n","/**\n * Angular library starter.\n * Build an Angular library compatible with AoT compilation & Tree shaking.\n * Written by Roberto Simonetti.\n * MIT license.\n * https://github.com/robisim74/angular-library-starter\n */\n\n/**\n * Entry point for all public APIs of the package.\n */\nexport {WebviewClientService,ReceiveMessageService} from './src/integrity-webview-client';\n","// Public classes.\n//export { WebviewClientObject } from './services/webview-client-object';\nexport { WebviewClientService } from './services/webview-client.service';\nexport { ReceiveMessageService } from './services/receive-message.service';\n","// tslint:disable:max-line-length\n\nimport { Injectable } from '@angular/core';\nexport class ReceiveMessageService {\nprivate InitKey: string = 'com.brickchain.integrity.init';\nprivate PollKey: string = 'com.brickchain.integrity.poll';\nprivate HandleKey: string = 'com.brickchain.integrity.handle';\nprivate HandleResultKey: string = 'com.brickchain.integrity.handle.result';\nprivate HandleErrorKey: string = 'com.brickchain.integrity.handle.error';\n/**\n * @param {?} event\n * @return {?}\n */\npublic receiveMessage(event: any): void {\n    if (event.data.op) {\n      const /** @type {?} */ script = event.data;\n      switch (script.op) {\n        case 'init':\n          script.result = ( /** @type {?} */((window as any)))[this.InitKey] ? ( /** @type {?} */((window as any)))[this.InitKey](script.param) : null;\n          break;\n        case 'poll':\n          script.result = ( /** @type {?} */((window as any)))[this.PollKey] ? ( /** @type {?} */((window as any)))[this.PollKey]() : null;\n          break;\n        case 'handle':\n          script.result = ( /** @type {?} */((window as any)))[this.HandleKey] ? ( /** @type {?} */((window as any)))[this.HandleKey]() : null;\n          break;\n        case 'result':\n          if (event.data.param) {\n            script.result = ( /** @type {?} */((window as any)))[this.HandleResultKey] ? ( /** @type {?} */((window as any)))[this.HandleResultKey](script.param) : null;\n          } else {\n            script.result = ( /** @type {?} */((window as any)))[this.HandleResultKey] ? ( /** @type {?} */((window as any)))[this.HandleResultKey]() : null;\n          }\n          break;\n        case 'error':\n          script.result = ( /** @type {?} */((window as any)))[this.HandleErrorKey] ? ( /** @type {?} */((window as any)))[this.HandleErrorKey](script.param) : null;\n          break;\n        case 'title':\n          script.result = document.title;\n          break;\n        default:\n          script.error = 'unsupported operation';\n      }\n      event.source.postMessage(script, event.origin);\n    }\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ReceiveMessageService_tsickle_Closure_declarations() {\n/** @type {?} */\nReceiveMessageService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nReceiveMessageService.ctorParameters;\n/** @type {?} */\nReceiveMessageService.prototype.InitKey;\n/** @type {?} */\nReceiveMessageService.prototype.PollKey;\n/** @type {?} */\nReceiveMessageService.prototype.HandleKey;\n/** @type {?} */\nReceiveMessageService.prototype.HandleResultKey;\n/** @type {?} */\nReceiveMessageService.prototype.HandleErrorKey;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nexport class WebviewClientService {\nprivate params: any;\nprivate InitKey: string = 'com.brickchain.integrity.init';\nprivate PollKey: string = 'com.brickchain.integrity.poll';\nprivate HandleKey: string = 'com.brickchain.integrity.handle';\nprivate HandleResultKey: string = 'com.brickchain.integrity.handle.result';\nprivate HandleErrorKey: string = 'com.brickchain.integrity.handle.error';\nprivate CancelKey: string = 'com.brickchain.integrity.cancel';\nprivate result: any;\nprivate handleDirective: any;\npublic constructor() {\n    (window as any)[this.PollKey] = () => this.result;\n    (window as any)[this.HandleKey] = () => this.handleDirective;\n  }\n/**\n * @return {?}\n */\npublic init(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      ( /** @type {?} */((window as any)))[this.InitKey] = (data: string) => {\n        try {\n          resolve(JSON.parse(data));\n        } catch ( /** @type {?} */error) {\n          reject(error);\n        }\n        return true;\n      };\n    });\n  }\n/**\n * @param {?} result\n * @return {?}\n */\npublic close(result: any): void {\n    this.result = result;\n  }\n/**\n * @return {?}\n */\npublic cancel(): void {\n    this.result = this.CancelKey;\n  }\n/**\n * @param {?} directive\n * @return {?}\n */\npublic handle(directive: any): Promise<any> {\n    this.handleDirective = directive;\n    return new Promise((resolve, reject) => {\n      ( /** @type {?} */((window as any)))[this.HandleResultKey] = (json: any) => resolve(json ? JSON.parse(json) : json);\n      ( /** @type {?} */((window as any)))[this.HandleErrorKey] = (json: any) => reject(json ? JSON.parse(json) : json);\n    });\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction WebviewClientService_tsickle_Closure_declarations() {\n/** @type {?} */\nWebviewClientService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWebviewClientService.ctorParameters;\n/** @type {?} */\nWebviewClientService.prototype.params;\n/** @type {?} */\nWebviewClientService.prototype.InitKey;\n/** @type {?} */\nWebviewClientService.prototype.PollKey;\n/** @type {?} */\nWebviewClientService.prototype.HandleKey;\n/** @type {?} */\nWebviewClientService.prototype.HandleResultKey;\n/** @type {?} */\nWebviewClientService.prototype.HandleErrorKey;\n/** @type {?} */\nWebviewClientService.prototype.CancelKey;\n/** @type {?} */\nWebviewClientService.prototype.result;\n/** @type {?} */\nWebviewClientService.prototype.handleDirective;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":[],"mappings":";AICA;IAUA;QAAA,iBAGG;QARO,IAAV,CAAA,OAAU,GAAkB,+BAAA,CAAgC;QAClD,IAAV,CAAA,OAAU,GAAkB,+BAAA,CAAgC;QAClD,IAAV,CAAA,SAAU,GAAoB,iCAAA,CAAkC;QACtD,IAAV,CAAA,eAAU,GAA0B,wCAAA,CAAyC;QACnE,IAAV,CAAA,cAAU,GAAyB,uCAAA,CAAwC;QACjE,IAAV,CAAA,SAAU,GAAoB,iCAAA,CAAkC;QAC3D,MAAc,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,cAAM,OAAA,KAAI,CAAC,MAAM,EAAX,CAAW,CAAC;QACjD,MAAc,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,cAAM,OAAA,KAAI,CAAC,eAAe,EAApB,CAAoB,CAAC;IACjE,CAAG;;;;IAMA,mCAAA,GAAA;QAAA,iBASA;QAVC,MAAJ,CAEW,IAAI,OAAA,CAAQ,UAAC,OAAC,EAAQ,MAAA;YAD3B,CAAN,CAA0B,MAET,CAFjB,CAAA,CAEsB,KAAC,CAAI,OAAC,CAAO,GAAG,UAAA,IAAO;gBADrC,IAEI,CAFZ;oBACU,OAAO,CAEC,IAAC,CAAI,KAAC,CAAK,IAAC,CAAI,CAAC,CAAC;gBADpC,CAAS;gBAEC,KAAV,CAAA,CAAU,KAAQ,CAAlB,CAAwB,CAAxB;oBADU,MAAM,CAEC,KAAC,CAAK,CAAC;gBADxB,CAAS;gBACD,MAAR,CAEe,IAAA,CAAK;YADpB,CAAO,CAEC;QADR,CAAK,CAEC,CAAC;IADP,CAAG;;;;;IAIA,oCAAA,GAAA,UAAA,MAAA;QAEC,IAAI,CADC,MAAC,GAAQ,MAAA,CAAO;IAEzB,CAAG;;;;IACA,qCAAA,GAAA;QAIC,IAAI,CAHC,MAAC,GAAQ,IAAA,CAAK,SAAC,CAAS;IAIjC,CAAG;;;;;IADA,qCAAA,GAAA,UAAA,SAAA;QAAA,iBAYA;QALC,IAAI,CANC,eAAC,GAAiB,SAAA,CAAU;QAOjC,MAAJ,CANW,IAAI,OAAA,CAAQ,UAAC,OAAC,EAAQ,MAAA;YAO3B,CAAN,CAA0B,MANT,CAMjB,CAAA,CANsB,KAAC,CAAI,eAAC,CAAe,GAAG,UAAA,IAAO,IAAQ,OAAA,OAAA,CAAQ,IAAC,GAAM,IAAA,CAAK,KAAC,CAAK,IAAC,CAAI,GAAG,IAAA,CAAK,EAAvC,CAAuC,CAAC;YAO/F,CAAN,CAA0B,MANT,CAMjB,CAAA,CANsB,KAAC,CAAI,cAAC,CAAc,GAAG,UAAA,IAAO,IAAQ,OAAA,MAAA,CAAO,IAAC,GAAM,IAAA,CAAK,KAAC,CAAK,IAAC,CAAI,GAAG,IAAA,CAAK,EAAtC,CAAsC,CAAC;QAOnG,CAAK,CANC,CAAC;IAOP,CAAG;;CApDH;AAgDO,oBAAP,CAAA,UAAO,GAAoC;IAO3C,EANE,IAAA,EAAM,UAAA,EAAW;CAOlB,CANC;;;;AAED,oBAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EASA,EATA,CASA,CAAC;AD9DF,iCAAA;AAEA;IACA;QAGU,IAAV,CAAA,OAAU,GAAkB,+BAAA,CAAgC;QAClD,IAAV,CAAA,OAAU,GAAkB,+BAAA,CAAgC;QAClD,IAAV,CAAA,SAAU,GAAoB,iCAAA,CAAkC;QACtD,IAAV,CAAA,eAAU,GAA0B,wCAAA,CAAyC;QACnE,IAAV,CAAA,cAAU,GAAyB,uCAAA,CAAwC;IA4C3E,CAAC;;;;;IA1CE,8CAAA,GAAA,UAAA,KAAA;QAEC,EAAJ,CAAA,CAAQ,KADC,CAAK,IAAC,CAAI,EAAC,CACpB,CADuB,CACvB;YACM,IAAN,gBAAA,CADY,MAAA,GAAS,KAAA,CAAM,IAAC,CAAI;YAE1B,MAAN,CAAA,CAAc,MADC,CAAM,EAAC,CACtB,CAAA,CAAA;gBACQ,KADK,MAAA;oBAEH,MAAM,CADC,MAAC,GAAQ,CAC1B,CAD0B,MAAW,CACrC,CAAA,CAD0C,IAAC,CAAI,OAAC,CAAO,GAAG,CAC1D,CAD0D,MAAW,CACrE,CAAA,CAD0E,IAAC,CAAI,OAAC,CAAO,CAAC,MAAC,CAAM,KAAC,CAAK,GAAG,IAAA,CAAK;oBAEnG,KAAV,CAAgB;gBACR,KADK,MAAA;oBAEH,MAAM,CADC,MAAC,GAAQ,CAC1B,CAD0B,MAAW,CACrC,CAAA,CAD0C,IAAC,CAAI,OAAC,CAAO,GAAG,CAC1D,CAD0D,MAAW,CACrE,CAAA,CAD0E,IAAC,CAAI,OAAC,CAAO,EAAC,GAAI,IAAA,CAAK;oBAEvF,KAAV,CAAgB;gBACR,KADK,QAAA;oBAEH,MAAM,CADC,MAAC,GAAQ,CAC1B,CAD0B,MAAW,CACrC,CAAA,CAD0C,IAAC,CAAI,SAAC,CAAS,GAAG,CAC5D,CAD4D,MAAW,CACvE,CAAA,CAD4E,IAAC,CAAI,SAAC,CAAS,EAAC,GAAI,IAAA,CAAK;oBAE3F,KAAV,CAAgB;gBACR,KADK,QAAA;oBAEH,EAAV,CAAA,CAAc,KADC,CAAK,IAAC,CAAI,KAAC,CAC1B,CADgC,CAChC;wBACY,MAAM,CADC,MAAC,GAAQ,CAC5B,CAD4B,MAAW,CACvC,CAAA,CAD4C,IAAC,CAAI,eAAC,CAAe,GAAG,CACpE,CADoE,MAAW,CAC/E,CAAA,CADoF,IAAC,CAAI,eAAC,CAAe,CAAC,MAAC,CAAM,KAAC,CAAK,GAAG,IAAA,CAAK;oBAE/H,CAAW;oBADX,IAAA,CAAiB,CAAjB;wBAEY,MAAM,CADC,MAAC,GAAQ,CAC5B,CAD4B,MAAW,CACvC,CAAA,CAD4C,IAAC,CAAI,eAAC,CAAe,GAAG,CACpE,CADoE,MAAW,CAC/E,CAAA,CADoF,IAAC,CAAI,eAAC,CAAe,EAAC,GAAI,IAAA,CAAK;oBAEnH,CAAW;oBACD,KAAV,CAAgB;gBACR,KADK,OAAA;oBAEH,MAAM,CADC,MAAC,GAAQ,CAC1B,CAD0B,MAAW,CACrC,CAAA,CAD0C,IAAC,CAAI,cAAC,CAAc,GAAG,CACjE,CADiE,MAAW,CAC5E,CAAA,CADiF,IAAC,CAAI,cAAC,CAAc,CAAC,MAAC,CAAM,KAAC,CAAK,GAAG,IAAA,CAAK;oBAEjH,KAAV,CAAgB;gBACR,KADK,OAAA;oBAEH,MAAM,CADC,MAAC,GAAQ,QAAA,CAAS,KAAC,CAAK;oBAE/B,KAAV,CAAgB;gBACR;oBACE,MAAM,CADC,KAAC,GAAO,uBAAA,CAAwB;YAEjD,CAAO;YACD,KAAK,CADC,MAAC,CAAM,WAAC,CAAW,MAAC,EAAO,KAAA,CAAM,MAAC,CAAM,CAAC;QAErD,CAAK;IACL,CAAG;;CA1CH;AA2CO,qBAAP,CAAA,UAAO,GAAoC;IAE3C,EADE,IAAA,EAAM,UAAA,EAAW;CAElB,CADC;;;;AAED,qBAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EAIA,EAJA,CAIA,CAAC;ADrDF,kBAAA;AACA,yEAAyE;ADDzE;;;;;;;;;GAUG;ADVH;;GAEG;;"}