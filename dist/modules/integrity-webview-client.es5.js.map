{"version":3,"file":"integrity-webview-client.es5.js","sources":["../../index.ts","../../public_api.ts","../../src/integrity-webview-client.ts","../../src/services/receive-message.service.ts","../../src/services/webview-client.service.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {WebviewClientService,ReceiveMessageService} from './public_api';\n","/**\n * Angular library starter.\n * Build an Angular library compatible with AoT compilation & Tree shaking.\n * Written by Roberto Simonetti.\n * MIT license.\n * https://github.com/robisim74/angular-library-starter\n */\n\n/**\n * Entry point for all public APIs of the package.\n */\nexport {WebviewClientService,ReceiveMessageService} from './src/integrity-webview-client';\n","// Public classes.\nexport { WebviewClientService } from './services/webview-client.service';\nexport { ReceiveMessageService } from './services/receive-message.service';\n","import { Injectable } from '@angular/core';\nexport class ReceiveMessageService {\nprivate InitKey: string = 'com.brickchain.integrity.init';\nprivate PollKey: string = 'com.brickchain.integrity.poll';\nprivate HandleKey: string = 'com.brickchain.integrity.handle';\nprivate HandleResultKey: string = 'com.brickchain.integrity.handle.result';\nprivate HandleErrorKey: string = 'com.brickchain.integrity.handle.error';\n/**\n * @param {?} event\n * @return {?}\n */\npublic receiveMessage(event: any): void {\n    if (/*isDefined(event.data.op)*/event.data.op) {\n      let /** @type {?} */ script = event.data;\n      switch (script.op) {\n        case 'init':\n          script.result = ( /** @type {?} */((<any>window)))[this.InitKey] ? ( /** @type {?} */((<any>window)))[this.InitKey](script.param) : null;\n          break;\n        case 'poll':\n          script.result = ( /** @type {?} */((<any>window)))[this.PollKey] ? ( /** @type {?} */((<any>window)))[this.PollKey]() : null;\n          break;\n        case 'handle':\n          script.result = ( /** @type {?} */((<any>window)))[this.HandleKey] ? ( /** @type {?} */((<any>window)))[this.HandleKey]() : null;\n          break;\n        case 'result':\n          if (/*isDefined(event.data.param)*/event.data.param) {\n            script.result = ( /** @type {?} */((<any>window)))[this.HandleResultKey] ? ( /** @type {?} */((<any>window)))[this.HandleResultKey](script.param) : null;\n          } else {\n            script.result = ( /** @type {?} */((<any>window)))[this.HandleResultKey] ? ( /** @type {?} */((<any>window)))[this.HandleResultKey]() : null;\n          }\n          break;\n        case 'error':\n          script.result = ( /** @type {?} */((<any>window)))[this.HandleErrorKey] ? ( /** @type {?} */((<any>window)))[this.HandleErrorKey](script.param) : null;\n          break;\n        case 'title':\n          script.result = document.title;\n          break;\n        default:\n          script.error = 'unsupported operation'\n      }\n      event.source.postMessage(script, event.origin);\n    }\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ReceiveMessageService_tsickle_Closure_declarations() {\n/** @type {?} */\nReceiveMessageService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nReceiveMessageService.ctorParameters;\n/** @type {?} */\nReceiveMessageService.prototype.InitKey;\n/** @type {?} */\nReceiveMessageService.prototype.PollKey;\n/** @type {?} */\nReceiveMessageService.prototype.HandleKey;\n/** @type {?} */\nReceiveMessageService.prototype.HandleResultKey;\n/** @type {?} */\nReceiveMessageService.prototype.HandleErrorKey;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nexport class WebviewClientService {\nprivate InitKey: string = 'com.brickchain.integrity.init';\nprivate PollKey: string = 'com.brickchain.integrity.poll';\nprivate HandleKey: string = 'com.brickchain.integrity.handle';\nprivate HandleResultKey: string = 'com.brickchain.integrity.handle.result';\nprivate HandleErrorKey: string = 'com.brickchain.integrity.handle.error';\nprivate CancelKey: string = 'com.brickchain.integrity.cancel';\nprivate result: any;\nprivate handleDirective: any;\n/**\n * @param {?} action\n */\npublic constructor(action: (params: string) => void) {\n        \n        (<any>window)[this.InitKey] = (params: string) => {\n            action(params);\n        };\n\n        (<any>window)[this.PollKey] = () => this.result;\n        (<any>window)[this.HandleKey] = () => this.handleDirective;\n        \n    }\n/**\n * @param {?} result\n * @return {?}\n */\npublic close(result:any): void {\n        this.result = result;\n    }\n/**\n * @return {?}\n */\npublic cancel(): void {\n        this.result = this.CancelKey;\n    }\n/**\n * @param {?} directive\n * @return {?}\n */\npublic handle(directive:any) :Promise<any> {\n        this.handleDirective=directive;\n        return new Promise((resolve,reject) => {\n            ( /** @type {?} */((<any>window)))[this.HandleResultKey] = (json:any) => resolve(json ? JSON.parse(json) : json);\n            ( /** @type {?} */((<any>window)))[this.HandleErrorKey] = (json:any) => reject(json ? JSON.parse(json):json);\n        });\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\nnull,\n];\n}\n\nfunction WebviewClientService_tsickle_Closure_declarations() {\n/** @type {?} */\nWebviewClientService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWebviewClientService.ctorParameters;\n/** @type {?} */\nWebviewClientService.prototype.InitKey;\n/** @type {?} */\nWebviewClientService.prototype.PollKey;\n/** @type {?} */\nWebviewClientService.prototype.HandleKey;\n/** @type {?} */\nWebviewClientService.prototype.HandleResultKey;\n/** @type {?} */\nWebviewClientService.prototype.HandleErrorKey;\n/** @type {?} */\nWebviewClientService.prototype.CancelKey;\n/** @type {?} */\nWebviewClientService.prototype.result;\n/** @type {?} */\nWebviewClientService.prototype.handleDirective;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":[],"mappings":"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"}